{"version":3,"sources":["context/UserContext.js","context/ContractContext.js","components/NavBar.jsx","components/ContractBalance.jsx","components/YuriHarry.jsx","components/BetForm.jsx","components/UserButton.jsx","components/MainCard.jsx","components/OwnerScreen.jsx","components/Directions.jsx","components/ModalWindow.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js","assets/backgroundImage.jpg","assets/logo.png","assets/head.png","assets/tail.png"],"names":["UserContext","React","createContext","userAddress","setUserAddress","userBalance","setUserBalance","winningsBalance","setWinningsBalance","UserProvider","Provider","useUser","useContext","ContractContext","contractAddress","setContractAddress","coinflip","setCoinflip","web3","setWeb3","network","setNetwork","contractBalance","setContractBalance","owner","setOwner","isOwner","setIsOwner","sentQueryId","setSentQueryId","awaitingCallbackResponse","setAwaitingCallbackResponse","awaitingWithdrawal","setAwaitingWithdrawal","ContractProvider","useContract","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","Nav","styled","nav","_templateObject","_taggedTemplateLiteral","NavCenter","div","_templateObject2","TitleLogo","_templateObject3","Img","img","_templateObject4","H1","_templateObject5","Circle","_templateObject6","CircleTwo","_templateObject7","Div","_templateObject8","NetworkDiv","_templateObject9","Navbar","_useUser","address","connectWallet","_ref","_asyncToGenerator","_callee","accounts","account","_context","window","ethereum","enable","Web3","givenProvider","console","log","eth","getAccounts","apply","arguments","parseFloat","toFixed","createElement","src","ethLogo","alt","className","onClick","Div1","Div2","ContractBalance","Fragment","concat","COINFLIPADDRESS","Coinflip","usdtContract","Contract","usdtAbi","Text","YuriButton","button","HarryButton","HeadImg","headImage","HarryImg","HarryImage","YuriHarry","props","toBigNum","utils","toWei","flip","_callee3","oneZero","bet","guess","betAmt","config","_context3","from","methods","approve","send","on","_callee2","_context2","hash","startAnimation","_ref3","receipt","flipResult","balance","userBal","bal","parseInt","events","raw","data","NotificationManager","info","stopAnimation","fromWei","balanceOf","Number","toPrecision","getWinningsBalance","_x3","error","err","_x","_x2","coin","useRef","Math","floor","random","current","style","animation","setTimeout","result","transform","warning","ref","TopAlign","BottomAlign","Wager","Input","input","Ether","BetForm","_useState","useState","_useState2","_slicedToArray","setBetAmt","placeholder","onChange","event","target","updateBalances","WithdrawButton","Text1","AlignText","Text2","Line","UserButton","withdrawWin","Card","MainCard","withdrawUserWinnings","AlignDivButton","ContractInput","ul","ContractButton","bounceAnimation","keyframes","bounce","isActive","li","span","MODAL_STYLES","position","top","left","backgroundColor","padding","height","width","zIndex","OVERLAY_STYLES","right","bottom","Message","DivAlign","DivAlignBtn","Button","ModalWindow","open","children","onClose","toChecksumAddress","Main","_useContract","fetchNetwork","useCallback","num","currentProvider","chainId","modalIsOpen","setModalIsOpen","_useState3","abi","_useState4","_useState5","_useState6","outcomeMessage","setOutcomeMessage","initWeb3","_ref2","web3Instance","loadUserAddress","t0","useEffect","loadContractBalance","_callee4","_context4","loadUserBalance","_ref5","_callee5","user","_web","_context5","loadWinningsBalance","_ref6","_callee6","userAdd","_context6","loadOwner","_callee7","theOwner","_context7","loadUserData","_callee8","_context8","response","userWithdrawal","fromBlock","returnValues","froether","NavBar","NotificationContainer","backgroundImage","App","userState","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","contractState","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.e8eef298.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\n\r\nexport const UserContext = React.createContext({\r\n    userAddress: '',\r\n    setUserAddress: () => {},\r\n    userBalance: '',\r\n    setUserBalance: () => {},\r\n    winningsBalance: '',\r\n    setWinningsBalance: () => {},\r\n})\r\n\r\nexport const UserProvider = UserContext.Provider\r\nexport const useUser = () => useContext(UserContext)","import React, { useContext } from \"react\";\r\n\r\nexport let ContractContext = React.createContext({\r\n  contractAddress: \"\",\r\n  setContractAddress: \"\",\r\n  coinflip: \"\",\r\n  setCoinflip: () => {},\r\n  web3: \"\",\r\n  setWeb3: () => {},\r\n  network: \"\",\r\n  setNetwork: \"\",\r\n  contractBalance: \"\",\r\n  setContractBalance: () => {},\r\n  owner: \"\",\r\n  setOwner: () => {},\r\n  isOwner: false,\r\n  setIsOwner: () => {},\r\n  sentQueryId: \"\",\r\n  setSentQueryId: () => {},\r\n  awaitingCallbackResponse: false,\r\n  setAwaitingCallbackResponse: () => {},\r\n  awaitingWithdrawal: false,\r\n  setAwaitingWithdrawal: () => {},\r\n});\r\n\r\nexport const ContractProvider = ContractContext.Provider;\r\nexport const useContract = () => useContext(ContractContext);\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ethLogo from \"../assets/logo.png\"\r\n\r\nimport { useUser } from '../context/UserContext'\r\nimport { useContract } from '../context/ContractContext'\r\nimport Web3 from 'web3'\r\n\r\nconst Nav = styled.nav`\r\n    border-bottom: 1px solid black;\r\n    height: 4rem;\r\n`;\r\n\r\nconst NavCenter = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: .5rem;\r\n    `;\r\n\r\nconst TitleLogo = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    `;\r\n\r\nconst Img = styled.img`\r\n    margin-left: 1.2rem;\r\n    height: 3.5rem;\r\n    width: 3.rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst H1 = styled.div`\r\n    color: white;\r\n    text-shadow: 2px 2px #666666;\r\n    font-size: 2.25rem;\r\n    font-weight: bolder;\r\n    margin-left: 1rem;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 2.2rem;\r\n    width: 19.5rem;\r\n    padding-left: .6rem;\r\n    border-radius: .8rem;\r\n    border: 1px solid #666666;\r\n    background: white;\r\n    color: #5D432C;\r\n    font-height: 4rem;\r\n    font-size: 1.2rem;\r\n    text-shadow: .5px .5px pink;\r\n    border-right: 1px solid #666666;\r\n    margin-right: 2rem;\r\n    `;\r\n\r\nconst CircleTwo = styled(Circle)`\r\n    border: 1px solid #35281E;\r\n    height: 1.9rem;\r\n    width: 7.8rem;\r\n    color: white;\r\n    padding-right: .5rem;\r\n    padding-left: .4rem;\r\n    padding-bottom: .05rem;\r\n    background: #5D432C;\r\n    border-radius: .8rem;\r\n    margin-right: 0\r\n`;\r\n\r\nconst Div = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst NetworkDiv = styled.div`\r\n    margin-right: 2rem;\r\n    font-size: 1.3rem;\r\n`;\r\n\r\n\r\nexport default function Navbar() {\r\n\r\n    //user context\r\n    const {\r\n        userAddress,\r\n        userBalance,\r\n        setUserAddress\r\n    } = useUser()\r\n\r\n    //contract context\r\n    const {\r\n        network\r\n    } = useContract()\r\n\r\n    const address = userAddress ? userAddress.slice(0, 5) + '...' + userAddress.slice(37, 42) : null\r\n    const connectWallet = async () => {\r\n        await window.ethereum.enable();\r\n        let web3 = new Web3(Web3.givenProvider)\r\n        console.log(\"user addresses start\");\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(\"accounts\", accounts);\r\n        let account = accounts[0]\r\n        setUserAddress(account);\r\n        return account\r\n    }\r\n\r\n    console.log(\"userbalance----\", parseFloat(userBalance).toFixed(3), typeof userBalance);\r\n\r\n    return (\r\n        <Nav>\r\n            <NavCenter>\r\n                <TitleLogo>\r\n                    <Img src={ethLogo} alt='ethereum logo' />\r\n                    <H1 className='nav-title'>  YURI OR HARRY </H1>\r\n                </TitleLogo>\r\n                <Div >\r\n                    <NetworkDiv className='nav-title'>\r\n                        {network}\r\n                    </NetworkDiv>\r\n                    {userAddress ? (\r\n                        <Circle >\r\n                            {userBalance} USDT\r\n                            <CircleTwo>\r\n                                {address}\r\n                            </CircleTwo>\r\n                        </Circle>\r\n                    ) : (\r\n                        <div><button className='connect-wallet' onClick={connectWallet}>connect wallet</button></div>\r\n                    )}\r\n\r\n                </Div>\r\n            </NavCenter>\r\n        </Nav>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useContract } from '../context/ContractContext'\r\n\r\nconst Div1 = styled.div`\r\n    font-size: 1.7rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    `;\r\n\r\nconst Div2 = styled(Div1)`\r\n    margin-top: rem;\r\n`;\r\n\r\nexport default function ContractBalance() {\r\n\r\n    //contract context\r\n    const {\r\n        contractBalance\r\n    } = useContract()\r\n\r\n\r\n    return (\r\n        <>\r\n        <Div1>\r\n                {`${parseFloat(contractBalance).toFixed(3)} Forest`} \r\n        </Div1>\r\n        <Div2>\r\n            Available to Win\r\n        </Div2>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport headImage from '../assets/head.png'\r\nimport HarryImage from '../assets/tail.png'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { useUser } from '../context/UserContext';\r\nimport { useContract } from '../context/ContractContext';\r\nimport Web3 from 'web3'\r\nimport Coinflip from '../abi/Coinflip.json'\r\n\r\nconst USDTADDRESS = \"0xfc0d8c331c3261f70182401793f067d05a9d1c40\";\r\nconst DECIMAL = 18;\r\nconst COINFLIPADDRESS = Coinflip.address;\r\nlet web3 = new Web3(Web3.givenProvider)\r\n\r\nlet usdtContract = new web3.eth.Contract(Coinflip.usdtAbi, USDTADDRESS);\r\n\r\n\r\n\r\nconst Circle = styled.div`\r\n    position: relative;\r\n    top: 2rem;\r\n    border: 1px solid pink;\r\n    border-radius: 1rem;\r\n    width 23rem;\r\n    height: 18rem;\r\n    margin: auto;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    color: white;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-top: 2rem;\r\n    margin-left: 1rem;\r\n    margin-right: 1.8rem;\r\n`;\r\n\r\n\r\nconst YuriButton = styled.button`\r\n    background-color: #df99a5;\r\n    padding: 7px 5px;\r\n    font-size: 15px;\r\n    min-width: 120px;\r\n    border-radius: 10px;\r\n    font-weight: 700;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    :hover {\r\n        background-color: pink;\r\n    }\r\n    `;\r\n\r\nconst HarryButton = styled(YuriButton)`\r\n    background-color: #5D7B93;\r\n\r\n    :hover {\r\n        background-color: #7994aa;\r\n    }\r\n`;\r\n\r\nconst HeadImg = styled.div`\r\n  background-image: url(${headImage});\r\n  height: 160px;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst HarryImg = styled.div`\r\n  background-image: url(${HarryImage});\r\n  height: 160px;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\n\r\n\r\nexport default function YuriHarry(props) {\r\n\r\n    function toBigNum(value) {\r\n        return web3.utils.toWei(value, \"ether\");\r\n    }\r\n\r\n    const {\r\n        userAddress,\r\n        setUserBalance,\r\n        setWinningsBalance\r\n    } = useUser();\r\n\r\n    const {\r\n        setContractBalance,\r\n    } = useContract();\r\n\r\n    //fetching contract context\r\n\r\n    const flip = async (oneZero, bet) => {\r\n        let guess = oneZero\r\n        let betAmt = bet\r\n        let config = { from: userAddress }\r\n        let txHash = \"\";\r\n\r\n        usdtContract.methods.approve(COINFLIPADDRESS, toBigNum(betAmt)).send(config)\r\n            .on(\"receipt\", async function () {\r\n                try {\r\n\r\n                    props.coinflip.methods.flip(guess, toBigNum(betAmt)).send(config)\r\n                        .on('transactionHash', (hash) => {\r\n                            startAnimation();\r\n                            txHash = hash;\r\n                        })\r\n                        .on('receipt', async function (receipt) {\r\n                            const flipResult = parseInt(receipt.events[\"filpFinshed\"].raw.data, 16);\r\n                            console.log(\"result\", oneZero, flipResult, receipt)\r\n                            if (flipResult) {\r\n                                NotificationManager.info(\"Congratulations you win\");\r\n                                stopAnimation(oneZero);\r\n                            } else {\r\n                                NotificationManager.info(\"You lose\");\r\n                                stopAnimation((oneZero + 1) % 2);\r\n                            }\r\n                            let balance = await props.coinflip.methods.contractBalance().call()\r\n                            setContractBalance(web3.utils.fromWei(balance, \"ether\"))\r\n                            // let userBal = await web3.eth.getBalance(userAddress)\r\n                            // let userBal = await usdtContract.balanceOf(userAddress);\r\n                            let userBal = await usdtContract.methods.balanceOf(userAddress).call();\r\n                            setUserBalance(Number.parseFloat(web3.utils.fromWei(userBal)).toPrecision(3))\r\n                            let config = { from: userAddress }\r\n                            let bal = await props.coinflip.methods.getWinningsBalance().call(config)\r\n                            setWinningsBalance(Number.parseFloat(web3.utils.fromWei(bal, \"ether\")).toPrecision(3));\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('Transaction error-------:', error);\r\n                            stopAnimation(oneZero);\r\n                        });\r\n\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    stopAnimation(oneZero);\r\n                }\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    const coin = useRef();\r\n    const handleYuri = () => {\r\n        if (props.betAmt <= .008) {\r\n            NotificationManager.warning('Bets must be higher than .008 ETH');\r\n        } else {\r\n            startAnimation();\r\n            let guess = 0\r\n            let bet = props.betAmt\r\n            flip(guess, bet)\r\n        }\r\n    }\r\n\r\n    const handleHarry = () => {\r\n        if (props.betAmt <= .008) {\r\n            // alert('Bets must be higher than .008 ETH')\r\n            NotificationManager.warning('Bets must be higher than .008 ETH');\r\n        } else {\r\n            startAnimation();\r\n            let guess = 1\r\n            let bet = props.betAmt\r\n            flip(guess, bet)\r\n        }\r\n        stopAnimation(0);\r\n    }\r\n\r\n    const startAnimation = () => {\r\n        let i = Math.floor(Math.random() * 2);\r\n        coin.current.style.animation = \"none\";\r\n        if (i) {\r\n            setTimeout(function () {\r\n                coin.current.style.animation = \"spin-Yuri 3s linear infinite\";\r\n            }, 100);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                coin.current.style.animation = \"spin-Harry 3s linear infinite\";\r\n            }, 100);\r\n        }\r\n        // setTimeout(updateStats, 3000);\r\n        // disableButton();\r\n    }\r\n\r\n    const stopAnimation = (result) => {\r\n        coin.current.style.animation = \"none\";\r\n        if (result === 1) {\r\n            coin.current.style.transform = 'rotateY(180deg)'\r\n        } else {\r\n            coin.current.style.transform = 'rotateY(0)'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Circle>\r\n            <Text>\r\n                <YuriButton onClick={handleYuri}>\r\n                    Yuri\r\n                </YuriButton>\r\n                <div>\r\n                    or\r\n                </div>\r\n                <HarryButton onClick={handleHarry}>\r\n                    Harry\r\n                </HarryButton>\r\n            </Text>\r\n\r\n            <div className=\"coin\" ref={coin}>\r\n\r\n                <div className=\"Yuri\">\r\n                    <HeadImg></HeadImg>\r\n                </div>\r\n                <div className=\"Harry\">\r\n                    <HarryImg></HarryImg>\r\n                </div>\r\n\r\n            </div >\r\n        </Circle >\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport YuriHarry from './YuriHarry'\r\n\r\nimport { useUser } from '../context/UserContext'\r\n\r\nconst Circle = styled.div`\r\n    position: relative;\r\n    top: 1rem;\r\n    border: 1px solid pink;\r\n    border-radius: 1rem;\r\n    width 23rem;\r\n    height: 5.4rem;\r\n    margin: auto;\r\n`;\r\n\r\nconst TopAlign = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n    margin-top: .5rem;\r\n`;\r\n\r\nconst BottomAlign = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    margin-left: 1rem;\r\n    margin-right: 2rem;\r\n    margin-top: .7rem;\r\n\r\n`;\r\n\r\nconst Wager = styled.div`\r\n    font-size: 1rem;\r\n    color: white;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border-top-style: hidden;\r\n    border-right-style: hidden;\r\n    border-left-style: hidden;\r\n    border-bottom-style: hidden;\r\n    outline: none;\r\n    background-color: #5D432C;\r\n    width: 10rem;\r\n    font-size: 2rem;\r\n    color: white;\r\n`;\r\n\r\nconst Balance = styled.div`\r\n    font-size: 1rem;\r\n    color: white;\r\n`;\r\n\r\nconst Ether = styled.div`\r\n    display: flex;\r\n    align-self:\r\n    margin-right: 1rem;\r\n    font-size: 2rem;\r\n    color: white;\r\n`;\r\n\r\n\r\nexport default function BetForm(props) {\r\n\r\n    //user context\r\n    const {\r\n        userBalance\r\n    } = useUser()\r\n\r\n    const [betAmt, setBetAmt] = useState('0');\r\n\r\n    const handleBetInput = (event) => {\r\n        setBetAmt(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Circle>\r\n                <TopAlign>\r\n                    <Wager>\r\n                        Wager\r\n                    </Wager>\r\n\r\n                    {/* <Balance>\r\n                        {`Balance:\\xa0 ${userBalance}`}\r\n                    </Balance> */}\r\n                </TopAlign>\r\n\r\n                <BottomAlign>\r\n                    <Input\r\n                        placeholder='0.0'\r\n                        onChange={handleBetInput}\r\n                    />\r\n                    <Ether>\r\n                        USDT\r\n                    </Ether>\r\n                </BottomAlign>\r\n\r\n            </Circle>\r\n\r\n            <YuriHarry\r\n                betAmt={betAmt}\r\n                coinflip={props.coinflip}\r\n                updateBalances={props.updateBalances}\r\n            />\r\n\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useUser } from '../context/UserContext'\r\n\r\nconst WithdrawButton = styled.button`\r\n    position: relative;\r\n    display: block;\r\n    margin:auto;\r\n    top: 6rem;\r\n    border: 1px solid #666666;\r\n    background-color: #333333;\r\n    border-radius: 1rem;\r\n    width 23rem;\r\n    height: 5.4rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    :hover {\r\n        background-color: #696969;\r\n        border: 1px solid pink;\r\n    } \r\n`;\r\n\r\nconst Text = styled.div`\r\n    position: relative;\r\n    top: 4rem;\r\n    font-size: 1rem;\r\n    margin-left: 2rem;\r\n    color: white;\r\n    `;\r\n\r\nconst Text1 = styled(Text)`\r\n    margin-right: 2rem;\r\n`;\r\n\r\nconst AlignText = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text2 = styled.div`\r\n    font-size: 1.5rem;\r\n    color: white;\r\n    text-shadow: .6px .6px pink;\r\n`;\r\n\r\nconst Line = styled.div`\r\n    position: relative;\r\n    top: 3rem;\r\n    display:block;\r\n    border:none;\r\n    color: #5D432C;\r\n    height:3px;\r\n    background: white;\r\n    background: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 190, from(#666666), to(#5D432C));\r\n`;\r\n\r\n\r\nexport default function UserButton(props) {\r\n\r\n    //user context\r\n    const {\r\n        winningsBalance\r\n    } = useUser()\r\n\r\n    const handleWithdraw = () => {\r\n        props.withdrawWin();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Line/>\r\n            <AlignText>\r\n                <Text>\r\n                    Your Winnings: \r\n                </Text> \r\n                <Text1>\r\n                    { winningsBalance }\r\n                </Text1>\r\n            </AlignText>\r\n            <WithdrawButton onClick={handleWithdraw}>\r\n                <Text2>\r\n                    Withdraw\r\n                </Text2>\r\n            </WithdrawButton>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BetForm from './BetForm'\r\nimport UserButton from './UserButton'\r\n\r\nconst Card = styled.div`\r\n    position: relative;\r\n    // height: 29.4rem;\r\n    width: 380px;\r\n    background: url('\media\gamebg.png');\r\n    border: 3px solid #35281E;\r\n    border-radius: 1.5rem;\r\n    margin auto;\r\n    margin-top: .5rem;\r\n`;\r\n\r\n\r\nexport default function MainCard(props) {\r\n\r\n    //passing withdraw function from Main as a prop to userButton\r\n    const withdrawWinnings = () => {\r\n        props.withdrawUserWinnings()\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <BetForm\r\n                userBalance={props.userBalance}\r\n                coinflip={props.coinflip}\r\n                updateBalances={props.updateBalances}\r\n            />\r\n            <UserButton\r\n                withdrawWin={withdrawWinnings}\r\n            />\r\n        </Card>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useContract } from '../context/ContractContext'\r\n\r\nconst AlignDivButton = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst AlignDiv = styled(AlignDivButton)`\r\n    margin-top: 3rem;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n    margin: auto;\r\n    margin-right: 4rem;\r\n`;\r\n\r\nconst OwnerButton = styled.button`\r\n    width: 8rem;\r\n    height: 3rem;\r\n    border-radius: 1rem;\r\n    background-color: #333333;\r\n    color: white;\r\n    text-shadow: .8px .8px #5D7B93;\r\n    font-size: 1.1rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n    margin-bottom: 1.2rem;\r\n`;\r\n\r\n\r\nconst ContractInput = styled.input`\r\n    width: 4rem;\r\n    height: 1rem;\r\n`;\r\n\r\nconst WinningsInput = styled(ContractInput)`\r\n`;\r\n\r\nconst ContractButton = styled.button`\r\n    width: 4.5rem;\r\n    height: 1.4rem;\r\n    background-color: orange;\r\n`;\r\n\r\nconst WinningsButton = styled(ContractButton)`\r\n`;\r\n\r\nconst WithdrawAllButton = styled.button`\r\n    width: 10rem;\r\n    height: 4rem;\r\n    background-color: green;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\n\r\nexport default function OwnerScreen(props) {\r\n\r\n    const {\r\n        isOwner\r\n    } = useContract()\r\n\r\n    const [contractAmt, setContractAmt] = useState('0');\r\n    const [winningsAmt, setWinningsAmt] = useState('0');\r\n    const [visible, setVisible] = useState(false);\r\n\r\n   //fund contract balance\r\n   const handleFundingContract = () => {\r\n        props.fundContract(contractAmt)\r\n    }\r\n\r\n    const handleInputContract = (event) => [\r\n        setContractAmt(event.target.value)\r\n    ]\r\n\r\n    //fund winnings balance\r\n    const handleFundingWinnings = () => {\r\n        props.fundWinnings(winningsAmt)\r\n    }\r\n\r\n    const handleInputWinnings = (event) => {\r\n        setWinningsAmt(event.target.value)\r\n        \r\n    }\r\n\r\n\r\n    //withdrawAll button\r\n    const handleWithdrawAll = () => {\r\n        props.withdrawAll()\r\n    }\r\n\r\n\r\n    //toggle hide/show owner functions\r\n   const hideOwnerFunctions = () => {\r\n        if(isOwner === false){ \r\n                alert('You are not the owner!')\r\n                \r\n        } else {\r\n            setVisible(!visible)\r\n        }\r\n    }\r\n    const ownerFunctions = visible ? \r\n    <>\r\n        <AlignDiv>\r\n            Fund Contract:\r\n            <ContractInput \r\n                placeholder='0.0'\r\n                onChange={handleInputContract}\r\n            />\r\n            <ContractButton onClick={handleFundingContract}>\r\n                Submit\r\n            </ContractButton>\r\n        </AlignDiv>\r\n        <AlignDiv>\r\n            Fund Winnings:\r\n            <WinningsInput \r\n                placeholder='0.0'\r\n                onChange={handleInputWinnings}   \r\n            />\r\n            <WinningsButton onClick={handleFundingWinnings}>\r\n                Submit\r\n            </WinningsButton>\r\n        </AlignDiv>\r\n        <AlignDiv>\r\n            <WithdrawAllButton onClick={handleWithdrawAll}>\r\n                Withdraw All\r\n            </WithdrawAllButton>\r\n        </AlignDiv>\r\n\r\n    </> : null;\r\n\r\n\r\n\r\n    return (\r\n            <Ul>\r\n                <AlignDivButton>\r\n                    <OwnerButton onClick={hideOwnerFunctions}>\r\n                        Owner\r\n                    </OwnerButton>\r\n                </AlignDivButton>\r\n                { ownerFunctions }\r\n            </Ul>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { bounce } from 'react-animations'\r\n\r\nconst bounceAnimation = keyframes`${bounce}`;\r\n\r\nconst DirectionsButton = styled.button`\r\n    text-shadow: .6px .6px pink;\r\n    width: 8rem;\r\n    height: 3rem;\r\n    border-radius: 1rem;\r\n    margin-bottom: 1rem;\r\n    background-color: #333333;\r\n    color: white;\r\n    font-size: 1.1rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n    animation-duration: 1.5s;\r\n    animation-name: ${props => (props.isActive ? bounceAnimation : '')};\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n    margin: auto;\r\n    margin-left: 3.5rem;\r\n`;\r\n\r\nconst Li = styled.li`\r\n    margin-top: 1.3rem;\r\n`;\r\n\r\nconst Clickable = styled.span`\r\n    color: blue;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: pink;\r\n    }\r\n`;\r\n\r\n\r\nexport default function Directions() {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    /**\r\n     * The following functions redirect the user to both MetaMask.io and a Ropsten Ether faucet\r\n     * respectively.\r\n     * \r\n     * @param {*event} The event parameter is included so the DOM doesn't rerender upon the onClick event.\r\n     */\r\n\r\n\r\n    const handleMetamask = (e) => {\r\n        e.preventDefault()\r\n        window.open(window.location.replace('https://metamask.io'))\r\n    }\r\n\r\n    const handleFaucet = (e) => {\r\n        e.preventDefault()\r\n        window.open(window.location.replace('https://faucet.dimensions.network/'))\r\n    }\r\n\r\n     //toggle directions on/off\r\n    const hideDirections = () => {\r\n        if(visible === true){\r\n            setVisible(!visible)\r\n        } else {\r\n        setTimeout(() => {\r\n            setVisible(!visible)\r\n            }, 1400)\r\n        }\r\n    }\r\n\r\n    const directions = visible ? \r\n    <> \r\n        <Li>Install <Clickable onClick={ handleMetamask } >MetaMask</Clickable> Browser Extension</Li>\r\n        <Li>Select Ropsten Network</Li>\r\n        <Li>Go to an <Clickable onClick={ handleFaucet } >Ether faucet</Clickable> and request ETH</Li>\r\n        <Li>Place your wager in our dApp</Li>\r\n        <Li>Select Yuri or Harry</Li>\r\n        <Li>Wait for confirmations</Li>\r\n        <Li>Withdraw your millions!</Li>\r\n    </> : null;\r\n\r\n\r\n    return (\r\n            <Ul>\r\n                <DirectionsButton \r\n                    isActive={isActive}\r\n                    onClick={(event) => {\r\n                    setIsActive(!isActive)\r\n                    hideDirections()\r\n                }}>\r\n                    Directions\r\n                </DirectionsButton>\r\n                { directions }\r\n            </Ul>\r\n        )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst MODAL_STYLES ={\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#FFF',\r\n    padding: '50px',\r\n    height: '9rem',\r\n    width: '24rem',\r\n    zIndex: 1000\r\n}\r\n\r\nconst OVERLAY_STYLES = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, .7)',\r\n    zIndex: 1000\r\n}\r\n\r\nconst Message = styled.div`\r\n    font-size: 2rem;\r\n`;\r\n\r\nconst DivAlign = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst DivAlignBtn = styled(DivAlign)`\r\n    margin-top: 3rem;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    height: 2.5rem;\r\n    width: 5rem;\r\n    background-color: pink;\r\n`;\r\n \r\n\r\nexport default function ModalWindow({ open, children, onClose }) {\r\n\r\n    if(!open) return null\r\n    return (\r\n\r\n        <>\r\n            <div style={OVERLAY_STYLES} />\r\n            <div style={MODAL_STYLES}>\r\n            <DivAlign>\r\n                <Message>\r\n                    {children}\r\n                </Message>\r\n            </DivAlign>\r\n            <DivAlignBtn>\r\n                <Button onClick={onClose}>Close</Button>\r\n            </DivAlignBtn>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport Coinflip from '../abi/Coinflip.json'\r\nimport Web3 from 'web3'\r\nimport NavBar from './NavBar'\r\nimport ContractBalance from './ContractBalance'\r\nimport MainCard from './MainCard'\r\nimport OwnerScreen from './OwnerScreen'\r\nimport Directions from './Directions'\r\nimport ModalWindow from './ModalWindow'\r\nimport styled from 'styled-components'\r\n\r\nimport { useUser } from '../context/UserContext'\r\nimport { useContract } from '../context/ContractContext'\r\n\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst AlignContent = styled.div`\r\n    position: relative;\r\n    top: 1rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst AlignQuarter = styled.div`\r\n    width: 25%\r\n`;\r\n\r\nconst AlignHalf = styled.div`\r\n    width: 50%\r\n`;\r\n\r\n/**\r\n * @notice The necessary data required for the dApp.\r\n */\r\nlet web3 = new Web3(Web3.givenProvider)\r\n// let contractAddress = web3.utils.toChecksumAddress('0xeed205d12965730582fc01a2c258b8624943f328');\r\nlet contractAddress = web3.utils.toChecksumAddress(Coinflip.address);\r\n\r\n\r\nexport default function Main() {\r\n\r\n\r\n    //fetching user context\r\n    const {\r\n        userAddress,\r\n        setUserAddress,\r\n        userBalance,\r\n        setUserBalance,\r\n        winningsBalance,\r\n        setWinningsBalance,\r\n    } = useUser();\r\n\r\n    //fetching contract context\r\n    const {\r\n        contractBalance,\r\n        setContractBalance,\r\n        owner,\r\n        setOwner,\r\n        setIsOwner,\r\n        network,\r\n        setNetwork,\r\n        setAwaitingCallbackResponse,\r\n        awaitingWithdrawal,\r\n        setAwaitingWithdrawal,\r\n    } = useContract();\r\n\r\n    const fetchNetwork = useCallback(async () => {\r\n        let num = await web3.currentProvider.chainId;\r\n        if (num === '0x1') {\r\n            setNetwork('Mainnet')\r\n        } else if (num === '0x3') {\r\n            setNetwork('Ropsten')\r\n        } else if (num === '0x4') {\r\n            setNetwork('Rinkeby')\r\n        } else if (num === '0x5') {\r\n            setNetwork('Goerli')\r\n        } else if (num === '0x42') {\r\n            setNetwork('Kovan')\r\n        } else if (num === '0x38') {\r\n            setNetwork('BSC')\r\n        } else if (num === '0xfa2') {\r\n            setNetwork('Fantom Testnet')\r\n        } else {\r\n            setNetwork('N/A')\r\n        }\r\n    }, [setNetwork])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * @notice The following state hooks are used only within this functional\r\n     *         component; ergo, they're not included in useContext. \r\n     */\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [coinflip, setCoinflip] = useState(new web3.eth.Contract(Coinflip.abi, contractAddress));\r\n    const [outcomeMessage, setOutcomeMessage] = useState('');\r\n\r\n    const initWeb3 = async () => {\r\n        if (window.ethereum) {\r\n            try {\r\n                await window.ethereum.enable();\r\n                const web3Instance = new Web3(window.ethereum);\r\n                setCoinflip(new web3Instance.eth.Contract(Coinflip.abi, contractAddress));\r\n                loadUserAddress();\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            console.log('MetaMask not found. Please install MetaMask wallet extension.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        initWeb3();\r\n    }, [userAddress]);\r\n\r\n    /**\r\n     * @notice The following functions fetch both the user's Ethereum data and\r\n     *         contract data. \r\n     */\r\n\r\n    const loadUserAddress = useCallback(async () => {\r\n        console.log(\"user addresses start\");\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(\"accounts\", accounts);\r\n        let account = accounts[0]\r\n        return account\r\n    }, [coinflip])\r\n\r\n    const loadContractBalance = useCallback(async () => {\r\n        let balance = await coinflip.methods.contractBalance().call()\r\n        setContractBalance(web3.utils.fromWei(balance, \"ether\"))\r\n        console.log(\"contract balance\", balance);\r\n    }, [setContractBalance])\r\n\r\n    const loadUserBalance = useCallback(async (user) => {\r\n        console.log(\"get user balance\", user);\r\n        if (user) {\r\n            // let userBal = await web3.eth.getBalance(user)\r\n            const USDTADDRESS = \"0xfc0d8c331c3261f70182401793f067d05a9d1c40\";\r\n            let web3 = new Web3(Web3.givenProvider)\r\n            let usdtContract = new web3.eth.Contract(Coinflip.usdtAbi, USDTADDRESS);\r\n            let userBal = await usdtContract.methods.balanceOf(user).call();\r\n            setUserBalance(Number.parseFloat(web3.utils.fromWei(userBal)).toFixed(3))\r\n        }\r\n    }, [setUserBalance])\r\n\r\n    const loadWinningsBalance = useCallback(async (userAdd) => {\r\n        let config = { from: userAdd }\r\n        let bal = await coinflip.methods.getWinningsBalance().call(config)\r\n        setWinningsBalance(Number.parseFloat(web3.utils.fromWei(bal, \"ether\")).toPrecision(3));\r\n    }, [setWinningsBalance])\r\n\r\n    const loadOwner = useCallback(async () => {\r\n        let theOwner = await coinflip.methods.owner().call()\r\n        setOwner(theOwner)\r\n        return theOwner\r\n    }, [setOwner])\r\n\r\n\r\n    /**\r\n     * @notice This function mimics the late React approach of componentDidMount; \r\n     *         where, this acts as an initialization of the dApp by fetching the\r\n     *         user's Ether data.\r\n     */\r\n\r\n    const loadUserData = useCallback(async () => {\r\n        await loadUserAddress().then(response => {\r\n            setUserAddress(response)\r\n            loadUserBalance(response)\r\n            loadWinningsBalance(response)\r\n        })\r\n    },\r\n        [loadUserAddress,\r\n            setUserAddress,\r\n            loadUserBalance,\r\n            loadWinningsBalance\r\n        ])\r\n\r\n\r\n    /**\r\n     * @notice This hook acts as an initializer a la componentDidMount. \r\n     *         \r\n     */\r\n    useEffect(() => {\r\n        // if(userAddress === ''){\r\n        loadUserData()\r\n        // }\r\n    }, [loadUserData, userAddress])\r\n\r\n\r\n\r\n    /**\r\n     * @notice This hook loads the network and balance of the contract.\r\n     * \r\n     */\r\n    useEffect(() => {\r\n        fetchNetwork()\r\n        loadContractBalance()\r\n        loadOwner().then(response => {\r\n            setOwner(response)\r\n        })\r\n    }, [network, fetchNetwork, loadContractBalance, loadOwner, setOwner])\r\n\r\n    /**\r\n     * @notice This hook specifically checks if the user's address matches with \r\n     *         the owner of the contract.\r\n     */\r\n    useEffect(() => {\r\n        if (userAddress) {\r\n            if (userAddress.length !== 0 && owner.length !== 0) {\r\n                if (userAddress === owner) {\r\n                    setIsOwner(true)\r\n                } else {\r\n                    setIsOwner(false)\r\n                }\r\n            }\r\n        }\r\n    }, [userAddress, owner, setIsOwner, coinflip])\r\n\r\n\r\n\r\n    /**\r\n     * @notice The following function simulates the flipping of a coin. \r\n     * \r\n     * @dev    Upon receipt, the setSentQueryId state is set with the user's\r\n     *         query ID. Further, the awaiting callback repsonse state is set\r\n     *         with true which is responsible for looking through the blocks for\r\n     *         the user's query ID.\r\n     * \r\n     * @param {*} oneZero The numeric representation of Yuri or Harry—Yuri is zero, \r\n     *                    Harry is one.\r\n     * @param {*} bet The wagered amount.\r\n     */\r\n\r\n    // const flip = async (oneZero, bet) => {\r\n    //     setAwaitingCallbackResponse(false)\r\n    //     console.log(\"test\");\r\n    //     let guess = oneZero\r\n    //     let betAmt = bet\r\n    //     let config = {\r\n    //         value: web3.utils.toWei(betAmt, 'ether'),\r\n    //         from: userAddress\r\n    //     }\r\n    //     console.log(\"start flip\");\r\n    //     coinflip.methods.flip(guess).send(config)\r\n    //         .on('transactionHash', (hash) => {\r\n    //             ref.current.startAnimation();\r\n    //         })\r\n    //         .on('receipt', function (receipt) {\r\n    //             const flipResult = parseInt(receipt.events[0].raw.data, 16);\r\n    //             if (flipResult) {\r\n    //                 NotificationManager.info(\"Congratulations you win\");\r\n    //                 ref.current.stopAnimation(oneZero);\r\n    //             } else {\r\n    //                 NotificationManager.info(\"You lose\");\r\n    //             }\r\n    //             loadWinningsBalance(userAddress);\r\n    //             loadContractBalance();\r\n    //         })\r\n    //         .on('error', (error) => {\r\n    //             console.error('Transaction error:', error);\r\n    //         });\r\n    // }\r\n\r\n    /**\r\n     * @notice This function closes the modal when the user hits 'okay,' and resets \r\n     *         the outcome message to an empty string. \r\n     */\r\n    const modalMessageReset = () => {\r\n        setModalIsOpen(false)\r\n        setOutcomeMessage('')\r\n    }\r\n\r\n    /**\r\n     * @notice This hook searches through Ethereum's blocks for the Provable query ID.\r\n     *         Once found, it looks for the event string 'Winner' or 'Loser' and updates \r\n     *         the modal outcome message. Thereafter, it reloads the user's winnings\r\n     *         balance and contract balance. \r\n     */\r\n\r\n\r\n\r\n    /**\r\n     * @notice This function withdraws the user's winnings balance into the user's\r\n     *         actual MetaMask wallet.\r\n     */\r\n\r\n    const withdrawUserWinnings = () => {\r\n        var balance = winningsBalance\r\n        coinflip.methods.withdrawUserWinnings().send(balance, { from: userAddress })\r\n        setAwaitingWithdrawal(true)\r\n    }\r\n\r\n\r\n    /**\r\n     * @notice The following functions are reserved for the owner of the contract.\r\n     * \r\n     * \r\n     * @notice This function adds Ether to the contract.\r\n     * @param {*} x The amount of Ether to transfer into the contract balance.\r\n     */\r\n\r\n    const fundContract = (x) => {\r\n        let fundAmt = x\r\n        let config = {\r\n            value: web3.utils.toWei(fundAmt, 'ether'),\r\n            from: userAddress\r\n        }\r\n        coinflip.methods.fundContract().send(config)\r\n            .once('receipt', function (receipt) {\r\n                loadContractBalance()\r\n                loadUserBalance(userAddress)\r\n            })\r\n    }\r\n\r\n    /**\r\n     * @notice This function adds Ether to the user's winnings balance. This is created\r\n     *         for testing purposes.\r\n     * \r\n     * @param {*} x The amount of Ether to transfer to the mapping balance.\r\n     */\r\n    const fundWinnings = (x) => {\r\n        let fundAmt = x\r\n        let config = {\r\n            value: web3.utils.toWei(fundAmt, 'ether'),\r\n            from: userAddress\r\n        }\r\n        coinflip.methods.fundWinnings().send(config)\r\n            .once('receipt', function (receipt) {\r\n                loadWinningsBalance(userAddress)\r\n                loadUserBalance(userAddress)\r\n            })\r\n    }\r\n\r\n    /**\r\n     * @notice This function withdraws the entire contract balance to the owner.\r\n     * @dev    The contract balance does not include any users' winnings balances.\r\n     */\r\n\r\n    const withdrawAll = () => {\r\n        var balance = contractBalance\r\n        coinflip.methods.withdrawAll().send(balance, { from: userAddress })\r\n            .on('receipt', function (receipt) {\r\n                loadContractBalance()\r\n                loadUserBalance(userAddress)\r\n            })\r\n    }\r\n\r\n    const updateBalances = () => {\r\n        loadContractBalance()\r\n        loadUserBalance(userAddress)\r\n\r\n    }\r\n\r\n    /**\r\n     * @notice This hook communicates to the user when their withdrawal of funds from\r\n     *         their winnings balance succeeded. Upon receipt, their winnings balance and \r\n     *         actual user balance reloads. \r\n     */\r\n    useEffect(() => {\r\n        if (awaitingWithdrawal) {\r\n            coinflip.events.userWithdrawal({\r\n                fromBlock: 'latest'\r\n            }, function (error, event) {\r\n                if (event.returnValues[0] === userAddress) {\r\n                    setOutcomeMessage(web3.utils.froether(event.returnValues[1], \"ether\") + ' USDT Successfully Withdrawn')\r\n                    loadWinningsBalance()\r\n                    loadUserBalance(userAddress)\r\n                }\r\n            })\r\n            setAwaitingWithdrawal(false)\r\n        }\r\n    }, [awaitingWithdrawal, winningsBalance, userBalance, userAddress, loadUserBalance, loadWinningsBalance, setAwaitingWithdrawal])\r\n\r\n\r\n\r\n    /**\r\n     * @notice This hook controls the modal which tells the user whether they won/lost the coinflip or\r\n     *          the success of their withdrawal.\r\n     */\r\n    useEffect(() => {\r\n        if (outcomeMessage !== '') {\r\n            setModalIsOpen(true)\r\n        }\r\n        return\r\n    }, [outcomeMessage])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <ModalWindow open={modalIsOpen}\r\n                onClose={() => modalMessageReset()\r\n                }>\r\n                {outcomeMessage}\r\n            </ModalWindow>\r\n            <div className='maincard-content'>\r\n                <div >\r\n                    <ContractBalance />\r\n                    <MainCard\r\n                        withdrawUserWinnings={withdrawUserWinnings}\r\n                        coinflip={coinflip}\r\n                        updateBalances={updateBalances}\r\n                    />\r\n                </div>\r\n                {/* <AlignQuarter>\r\n                    <OwnerScreen\r\n                        fundContract={fundContract}\r\n                        fundWinnings={fundWinnings}\r\n                        withdrawAll={withdrawAll}\r\n                    />\r\n                </AlignQuarter> */}\r\n            </div>\r\n            <NotificationContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport backgroundImage from \"./assets/backgroundImage.jpg\";\r\nimport Main from \"./components/Main\";\r\n\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport { ContractProvider } from \"./context/ContractContext\";\r\n\r\nconst Img = styled.div`\r\n  border: 1px solid #000;\r\n  background-image: url(${backgroundImage});\r\n  min-height: 800px;\r\n  height: 100vh;\r\n`;\r\n\r\nfunction App() {\r\n  //user state\r\n  const [userAddress, setUserAddress] = useState(\"\");\r\n  const [userBalance, setUserBalance] = useState(\"\");\r\n  const [winningsBalance, setWinningsBalance] = useState(\"\");\r\n\r\n  const userState = {\r\n    userAddress,\r\n    setUserAddress,\r\n    userBalance,\r\n    setUserBalance,\r\n    winningsBalance,\r\n    setWinningsBalance,\r\n  };\r\n\r\n  //contract state\r\n  const [contractBalance, setContractBalance] = useState(\"\");\r\n  const [owner, setOwner] = useState(\"\");\r\n  const [network, setNetwork] = useState(\"\");\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [sentQueryId, setSentQueryId] = useState(\"\");\r\n  const [awaitingCallbackResponse, setAwaitingCallbackResponse] = useState(\"\");\r\n  const [awaitingWithdrawal, setAwaitingWithdrawal] = useState(\"\");\r\n\r\n  const contractState = {\r\n    contractBalance,\r\n    setContractBalance,\r\n    owner,\r\n    setOwner,\r\n    isOwner,\r\n    setIsOwner,\r\n    network,\r\n    setNetwork,\r\n    sentQueryId,\r\n    setSentQueryId,\r\n    awaitingCallbackResponse,\r\n    setAwaitingCallbackResponse,\r\n    awaitingWithdrawal,\r\n    setAwaitingWithdrawal,\r\n  };\r\n\r\n  return (\r\n    <Img>\r\n      <UserProvider value={userState}>\r\n        <ContractProvider value={contractState}>\r\n          <Main />\r\n        </ContractProvider>\r\n      </UserProvider>\r\n    </Img>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/backgroundImage.914c7b7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.370f4d14.png\";","module.exports = __webpack_public_path__ + \"static/media/head.53ccd981.png\";","module.exports = __webpack_public_path__ + \"static/media/tail.bc77fba8.png\";"],"sourceRoot":""}